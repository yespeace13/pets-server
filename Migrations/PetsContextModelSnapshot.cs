// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PetsServer.Context;

#nullable disable

namespace PetsServer.Migrations
{
    [DbContext(typeof(PetsContext))]
    partial class PetsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IS_5.Organization.Model.OrganizationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Inn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("KPP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("LegalTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("LocalityId")
                        .HasColumnType("integer");

                    b.Property<string>("NameOrganization")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TypeOrganizationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LegalTypeId");

                    b.HasIndex("LocalityId");

                    b.HasIndex("TypeOrganizationId");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("SupportLibrary.Model.Organization.LegalTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("LegalTypeModel");
                });

            modelBuilder.Entity("SupportLibrary.Model.Organization.LocalityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Localitys");
                });

            modelBuilder.Entity("SupportLibrary.Model.Organization.TypeOrganizationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TypeOrganizations");
                });

            modelBuilder.Entity("IS_5.Organization.Model.OrganizationModel", b =>
                {
                    b.HasOne("SupportLibrary.Model.Organization.LegalTypeModel", "LegalType")
                        .WithMany()
                        .HasForeignKey("LegalTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SupportLibrary.Model.Organization.LocalityModel", "Locality")
                        .WithMany()
                        .HasForeignKey("LocalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SupportLibrary.Model.Organization.TypeOrganizationModel", "TypeOrganization")
                        .WithMany()
                        .HasForeignKey("TypeOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LegalType");

                    b.Navigation("Locality");

                    b.Navigation("TypeOrganization");
                });
#pragma warning restore 612, 618
        }
    }
}
